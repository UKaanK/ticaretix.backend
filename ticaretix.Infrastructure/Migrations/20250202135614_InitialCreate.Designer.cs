// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ticaretix.Infrastructure.Data;

#nullable disable

namespace ticaretix.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250202135614_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ticaretix.Core.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.KullaniciEntity", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.SepetDetaylariEntity", b =>
                {
                    b.Property<int>("SepetDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SepetDetayID"));

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SepetID")
                        .HasColumnType("int");

                    b.Property<int>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("SepetDetayID");

                    b.HasIndex("SepetID");

                    b.HasIndex("UrunID");

                    b.ToTable("SepetDetaylari");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.SepetEntity", b =>
                {
                    b.Property<int>("SepetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SepetID"));

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("SepetID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Sepetler");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.UrunlerEntity", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("StokMiktari")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.SepetDetaylariEntity", b =>
                {
                    b.HasOne("ticaretix.Core.Entities.SepetEntity", "Sepet")
                        .WithMany("SepetDetaylari")
                        .HasForeignKey("SepetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ticaretix.Core.Entities.UrunlerEntity", "Urun")
                        .WithMany("SepetDetaylari")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sepet");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.SepetEntity", b =>
                {
                    b.HasOne("ticaretix.Core.Entities.KullaniciEntity", "Kullanici")
                        .WithMany("Sepetler")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.UrunlerEntity", b =>
                {
                    b.HasOne("ticaretix.Core.Entities.CategoryEntity", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.KullaniciEntity", b =>
                {
                    b.Navigation("Sepetler");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.SepetEntity", b =>
                {
                    b.Navigation("SepetDetaylari");
                });

            modelBuilder.Entity("ticaretix.Core.Entities.UrunlerEntity", b =>
                {
                    b.Navigation("SepetDetaylari");
                });
#pragma warning restore 612, 618
        }
    }
}
